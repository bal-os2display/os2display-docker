apiVersion: apps/v1
kind: Deployment
metadata:
  name: search
  labels:
    app: search
spec:
  replicas: 1
  selector:
    matchLabels:
      app: search
  template:
    metadata:
      labels:
        app: search
    spec:
      containers:
      - image: kkos2display/search:support-non-default-es-host
        imagePullPolicy: Always
        name: search
        ports:
        - name: main-port
          containerPort: 3010
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", 'rm -f /home/app/search_node/config.json && ln -s /search-config/config.json /home/app/search_node/config.json && rm -f /home/app/search_node/apikeys.json && ln -s /search-config/apikeys.json /home/app/search_node/apikeys.json && rm -f /home/app/search_node/mappings.json && ln -s /search-config/mappings.json /home/app/search_node/mappings.json']
        volumeMounts:
          - name: search-config
            mountPath: /search-config
      initContainers:
      - name: init-copy-config
        image: kkos2display/search:support-non-default-es-host
        imagePullPolicy: Always
        command: ['bash', '-c', '[[ -f /search-config/config.json ]] || cp /initial-config/config.json /search-config/config.json; [[ -f /search-config/apikeys.json ]] || cp /initial-config/apikeys.json /search-config/apikeys.json; [[ -f /search-config/mappings.json ]] || cp /initial-config/mappings.json /search-config/mappings.json']
        volumeMounts:
        - name: initial-config-volume
          mountPath: /initial-config
        - name: search-config
          mountPath: /search-config
      volumes:
        - name: initial-config-volume
          configMap:
            name: search-initial-config
        - name: search-config
          persistentVolumeClaim:
            claimName: search-config-claim
