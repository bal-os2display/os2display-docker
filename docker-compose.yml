version: "3.2"
services:

  admin-nginx:
    image: kkos2display/admin-nginx:0.1
    ports:
      - 80
    # We need search and middleware to be resolvable before starting.
    volumes:
      - admin-release:/var/www/admin
      - symfony-cache:/var/www/admin/app/cache
      - admin-uploads:/var/www/admin/web/uploads
    depends_on:
      - middleware
      - search
      - admin_release
    environment:
      VIRTUAL_HOST: admin.os2display.docker
    networks:
      - backend

  admin-php:
    image: kkos2display/admin-php:0.1
    depends_on:
      - admin_release
    volumes:
      - admin-release:/var/www/admin
      - admin-uploads:/var/www/admin/web/uploads
      - symfony-cache:/var/www/admin/app/cache
      - ./development/config/parameters.yml:/var/www/admin/app/config/parameters.yml
      - ./development/scripts:/opt/development/scripts
    environment:
      # PHPstorm needs this to work with xdebug.
      PHP_IDE_CONFIG: "serverName=admin.os2display.docker"
    networks:
      - backend

  admin-cron:
    image: kkos2display/admin-php:0.1
    depends_on:
      - admin_release
    volumes:
      - admin-release:/var/www/admin
      - admin-uploads:/var/www/admin/web/uploads
      - symfony-cache:/var/www/admin/app/cache
      - ./development/config/parameters.yml:/var/www/admin/app/config/parameters.yml
      - ./development/scripts:/opt/development/scripts
    environment:
      # The crontab picks this up and passes it to Symfony.
      ENV: "dev"
    networks:
      - backend
    entrypoint: /sbin/my_init

  admin_release:
    image: kkos2display/admin-release:latest
    volumes:
      - admin-release:/var/www/admin
    networks:
      - backend

  elasticsearch:
    image: kkos2display/elasticsearch:1.7.1
    networks:
      - backend
    volumes:
      - es-data:/var/lib/elasticsearch

  search:
    image: kkos2display/search:2.1.10-kkpatch-1
    ports:
      - 3010
    volumes:
      # Mount in a log-tailer that will output our logs to standard out
      - './images/search/tools/log-stream-service.sh:/etc/my_init.d/99_log-tailer:ro'
    environment:
      VIRTUAL_HOST: search.os2display.docker
    depends_on:
      - elasticsearch
    networks:
      - backend

  redis:
    image: kkos2display/redis:4.0.9
    networks:
      - backend

  middleware:
    image: kkos2display/middleware
    ports:
      - 3020
    networks:
      - backend
    environment:
      VIRTUAL_HOST: middleware.os2display.docker
    depends_on:
      - redis
    volumes:
      # Mount in a log-tailer that will output our logs to standard out
      - './images/middleware/tools/log-stream-service.sh:/etc/my_init.d/99_log-tailer:ro'

  admin-db:
    image: mariadb:10.3
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: os2display
      MYSQL_USER: os2display
      MYSQL_PASSWORD: os2display
    volumes:
      - db-data:/var/lib/mysql

  mailhog:
    image: mailhog/mailhog
    networks:
      - backend
    environment:
      VIRTUAL_HOST: mail.os2display.docker
      VIRTUAL_PORT: 8025

  screen:
    image: kkos2display/screen:5.0.3
    ports:
      - 80
    environment:
      VIRTUAL_HOST: screen.os2display.docker
    networks:
      - backend
    # We proxy these so need them to exist.
    depends_on:
      - middleware
      - search

networks:
  backend:

volumes:
  es-data:
  db-data:
  admin-uploads:
  symfony-cache:
  admin-release:
    driver_opts:
      type: none
      device: $PWD/development/admin
      o: bind
