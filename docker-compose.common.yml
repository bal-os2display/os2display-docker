# Base docker-compose file used by each of the specific mode-files.
version: "3.7"
services:

  # Hosts static requests to admin and proxies dynamic requests to admin-php.
  admin-nginx:
    image: eu.gcr.io/os2display-bbs/os2display-bbs/admin-nginx:${ADMIN_NGINX_BUILD_TAG}
    ports:
      - 80
    volumes:
      - admin-release:/var/www
      - symfony-cache:/var/www/admin/app/cache
      - admin-uploads:/var/www/admin/web/uploads
    # We need search and middleware to be resolvable before starting or nginx
    # will crash.
    depends_on:
      - middleware
      - search
    environment:
      VIRTUAL_HOST: admin.${DOCKER_BASE_DOMAIN}

  admin-php:
    image: eu.gcr.io/os2display-bbs/os2display-bbs/admin-php:${ADMIN_PHP_BUILD_TAG}
    volumes:
      - admin-release:/var/www
      - admin-uploads:/var/www/admin/web/uploads
      - symfony-cache:/var/www/admin/app/cache
      - ./development/config/parameters.yml:/var/www/admin/app/config/parameters.yml
      - ./development/scripts:/opt/development/scripts

  admin-cron:
    image: eu.gcr.io/os2display-bbs/os2display-bbs/admin-php:${ADMIN_PHP_BUILD_TAG}
    volumes:
      - admin-release:/var/www
      - admin-uploads:/var/www/admin/web/uploads
      - symfony-cache:/var/www/admin/app/cache
      - ./development/config/parameters.yml:/var/www/admin/app/config/parameters.yml
      - ./development/scripts:/opt/development/scripts
    command: jobber-entrypoint.sh

  elasticsearch:
    image: eu.gcr.io/os2display-bbs/os2display-bbs/elasticsearch:${ELASTICSEARCH_SOURCE_TAG}-${ELASTICSEARCH_BUILD_TAG}
    volumes:
      - es-data:/var/lib/elasticsearch

  search:
    image: eu.gcr.io/os2display-bbs/os2display-bbs/search:${SEARCH_SOURCE_TAG}-${SEARCH_BUILD_TAG}
    ports:
      - 3010
    volumes:
      # Mount in a log-tailer that will output our logs to standard out
      - './images/search/tools/log-stream-service.sh:/etc/my_init.d/99_log-tailer:ro'
    environment:
      VIRTUAL_HOST: search.${DOCKER_BASE_DOMAIN}
    depends_on:
      - elasticsearch

  redis:
    image: eu.gcr.io/os2display-bbs/os2display-bbs/redis:${REDIS_SOURCE_TAG}-${REDIS_BUILD_TAG}

  middleware:
    image: eu.gcr.io/os2display-bbs/os2display-bbs/middleware:${MIDDLEWARE_SOURCE_TAG}-${MIDDLEWARE_BUILD_TAG}
    ports:
      - 3020
    environment:
      VIRTUAL_HOST: middleware.${DOCKER_BASE_DOMAIN}
    depends_on:
      - redis
    volumes:
      # Mount in a log-tailer that will output our logs to standard out
      - './images/middleware/tools/log-stream-service.sh:/etc/my_init.d/99_log-tailer:ro'

  screen:
    image: eu.gcr.io/os2display-bbs/os2display-bbs/screen:${SCREEN_SOURCE_TAG}-${SCREEN_BUILD_TAG}
    ports:
      - 80
    environment:
      VIRTUAL_HOST: screen.${DOCKER_BASE_DOMAIN}
    # We proxy these so need them to exist.
    depends_on:
      - middleware
      - search

  admin-db:
    image: mariadb:10.3
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: os2display
      MYSQL_USER: os2display
      MYSQL_PASSWORD: os2display
    volumes:
      - db-data:/var/lib/mysql

  mailhog:
    image: mailhog/mailhog
    environment:
      VIRTUAL_HOST: mail.${DOCKER_BASE_DOMAIN}
      VIRTUAL_PORT: 8025

  # Add in the admin_release service even though we might not need its contents
  # if we're running in dev-mode.
  # The reason we still add it in common is in order for docker-compose down
  # to know that the container needs to be removed when we switch from release-
  # to dev-mode.
  admin_release:
    image: eu.gcr.io/os2display-bbs/os2display-bbs/admin-release:${ADMIN_RELEASE_TAG}

volumes:
  es-data:
  db-data:
  admin-uploads:
  symfony-cache:
  admin-release:

